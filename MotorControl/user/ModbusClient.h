/***********************************************Copyright (c)*********************************************
**
**------------------------------------------------File Info-----------------------------------------------
** File name:						ModbusUser.h
** Last modified Date:	2010-04-27
** Last Version:				1.0
** Descriptions:				MODBUS通讯头文件
** Dependencies:				none
** Processor:						LPC23xx
** Compiler:						ARM Developer Suite v1.2
**--------------------------------------------------------------------------------------------------------
** Author	Date					Version		Comment
** 				2010-04-23		1.0				Original
**
*********************************************************************************************************/
#ifndef __MODBUS_CLIENT_H
#define __MODBUS_CLIENT_H


#ifdef __cplusplus
extern "C" {
#endif  
	
#include 	"motor_control_protocol.h"
	
/*********************************************************************************************************
    Modbus协议定义的出错代码    
*********************************************************************************************************/
#define EXCEPTION_CODE_1		1
#define EXCEPTION_CODE_2		2
#define EXCEPTION_CODE_3		3
#define EXCEPTION_CODE_4		4
#define EXCEPTION_CODE_5		5
#define EXCEPTION_CODE_6		6

/*********************************************************************************************************
    函数返回出错代码                           
*********************************************************************************************************/
#define MB_NO_ERR                   0x00		               /*  无错误                      */
#define ILLEGAL_FUNCTION            0x01		               /*  无效功能代码                */
#define ILLEGAL_DATA_ADDR           0x02		               /*  无效地址                    */
#define ILLEGAL_DATA_VALUE          0x03		               /*  无效数据值                  */
#define SLAVE_DEVICE_FAILURE        0x04		               /*  从设备出错                  */
/*  从机已接收请求处理数据，但需要较长的处理时间，为避免主机出现超时错误而发送该确认响应。如果从机已完成处理，在主机下一次轮寻时响应 */
#define ACKNOWLEDGE                 0x05		
#define SLAVE_DEVICE_BUSY           0x06		/*  从机正忙于处理一个长时程序命令，请求主机在从机空闲时发送信息  */
/*  否定应答，从机不能执行查询要求的程序功能时，该代码使用十进制13或14代码，向主机返回一个“不成功的编程请求”信息。主机应请求诊断从机的错误信息 */
#define NEGATIVE_ACKNOWLEDGE        0x07		
#define MEMORY_PARITY_ERR           0x08		/*  从机读扩展内存中的数据时，发现有奇偶校验错误，主机按从机的要求重新发送数据请求 */
#define ILLEGAL_LEN                 0x09								//数据长度不足或长度导致地址超出应有范围
//#define GATEWAY_PATH_UNABLE         0x0A
//#define GATEWAY_TARGET_DEV_FAIL     0x0B
#define ILLEGAL_MODBUS_ADDR         0x0C		//不是本机地址
#define ILLEGAL_CRC                 0x0D									//crc错误
//#define MB_FUN_NOT_DEF              0x80		                 /*  未定义功能代码              */
//#define MB_THE_CH_BUSY				0x81		                        /*  管道忙，正被使用            */
//#define MB_RESPONSE_TIME_OUT		0x82		                        /*  应答超时                    */
//#define MB_PARAMETER_ERR			0x83		                        /*  参数出错                    */
//#define MB_INVALID_CH				0x84		                        /*  无效的管道                  */
#define MB_INVALID_MOD				0x85		                        /*  无效的模式                  */
//#define MB_INVALID_BAUD				0x85		                        /*  无效的波特率                */
//#define MB_MALLOC_ERR				0x86		                        /*  分配内存出错                */
//#define MB_OS_EVENT					0x87		                        /*  申请OS资源出错              */ 
/*********************************************************************************************************
    定义广播地址                       							  
*********************************************************************************************************/
#define	BROADCAST_ADDRESS	0
#define LOCAL_ADDRESS     255 
/*********************************************************************************************************
    Modbus 配置相关宏定义																   
*********************************************************************************************************/
//#define	MB_RTU_MODE		0 				/*  Modbus RTU模式              */
//#define	MB_ASCII_MODE	1				/*  Modbus ASCII模式            */
//#define	MB_TCP_MODE		2				/*  Modbus TCP模式            */
/*********************************************************************************************************

*********************************************************************************************************/


/*********************************************************************************************************
    Modbus 接收发送数据长度限制
*********************************************************************************************************/
#define MODBUS_R_SIZE		255
#define MODBUS_W_SIZE		255
/*********************************************************************************************************
    Modbus 文件限制
*********************************************************************************************************/

/**********************************************************************
**函数原型： void  MB_CFGInit(void)
**入口参数:	无
**出口参数:	无
**返 回 值：无
**说    明：MODBUS协议初始化程序
************************************************************************/
void  ModBus_CFGInit(void);

/**********************************************************************
**函数原型： uint8_t RtuModbusParse(uint8_t *pRecvBuf,uint8_t *pSendBuf,uint16_t *pLen)
**入口参数:	*pRecvBuf 	:接收数据指针
**			*pSendBuf 	:发送数据指针
**			*pLen 		:接收到的字节数
**			lenLim		:发送数据的长度限值（最大值，包括从地址到CRC校验的全部长度）
**出口参数:	*pSendBuf 	:填充到发送数据指针中的数据
**			*pLen 		:发送的字节数
**返 回 值：见 函数返回出错代码
**说    明：modbus client 解析程序
************************************************************************/
uint8_t RtuModbusParse(MCP_Handle_t *pHandle,uint8_t *pRecvBuf,uint8_t *pSendBuf,uint16_t *pLen,uint16_t lenLim);


#ifdef __cplusplus
}
#endif                                                                  /*  __cplusplus                 */
#endif                                                                  /*  __MODBUSUSER_H              */

/*********************************************************************************************************
  END FILE
*********************************************************************************************************/
